rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #only works in RStudio!
SCRIPTDIR<-file.path(getwd(),'SCRIPT')
for (f in list.files(SCRIPTDIR,full.names = T)){ source(f)}
#### SPATIAL DATA #####
library(raster)
library(rgeos)
# SPRESDIR<-file.path(SPRESDIR,'ENV')
# dir.create(SPRESDIR,recursive=T,showWarnings = F)
# GFXDIR<-file.path(ENVDIR,'GFX')
# dir.create(GFXDIR,recursive=T,showWarnings = F)
cellsize<-5000
boundary<-rgdal::readOGR(file.path(SPDIR,'Prediction_Boundary.gpkg'))
shelf<-rgdal::readOGR(file.path(SPDIR,'shelf_edge_Clip.gpkg'))
shelf_poly<-rgdal::readOGR(file.path(SPDIR,'shelf_edge_Clip_Polygon.gpkg'))
surveyarea<-rgdal::readOGR(file.path(SPDIR,'Survey_Area_Mask.gpkg'))
coastline<-rgdal::readOGR(file.path(SPDIR,'Antarctica_Clip.gpkg'))
depth_i<-raster::raster(file.path(SPDIR,'ibcso_v1_bed.tif')) #60?S
depth_e<-raster::raster(file.path(SPDIR,'ETOPO1_DEM.tif')) #60?S
depth_i<-crop(depth_i,boundary)
plot(depth_i)
depth_e<-crop(depth_e,boundary)
plot(boundary,add=T)
#depth_e<-raster::raster(file.path(SPDIR,'ETOPO1_DEM.tif')) #60?S
#depth_e<-crop(depth_e,boundary)
raster::writeRaster(depth_i,file.path(SPDIR,'ibcso_v1_bed_crop.tif'),driver='GTiff') #60?S
depth_i<-raster::raster(file.path(SPDIR,'ibcso_v1_bed_crop.tif')) #60?S
plot(depth_i)
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #only works in RStudio!
SCRIPTDIR<-file.path(getwd(),'SCRIPT')
for (f in list.files(SCRIPTDIR,full.names = T)){ source(f)}
#### SPATIAL DATA #####
library(raster)
library(rgeos)
# SPRESDIR<-file.path(SPRESDIR,'ENV')
# dir.create(SPRESDIR,recursive=T,showWarnings = F)
# GFXDIR<-file.path(ENVDIR,'GFX')
# dir.create(GFXDIR,recursive=T,showWarnings = F)
cellsize<-5000
boundary<-rgdal::readOGR(file.path(SPDIR,'Prediction_Boundary.gpkg'))
shelf<-rgdal::readOGR(file.path(SPDIR,'shelf_edge_Clip.gpkg'))
shelf_poly<-rgdal::readOGR(file.path(SPDIR,'shelf_edge_Clip_Polygon.gpkg'))
surveyarea<-rgdal::readOGR(file.path(SPDIR,'Survey_Area_Mask.gpkg'))
coastline<-rgdal::readOGR(file.path(SPDIR,'Antarctica_Clip.gpkg'))
depth_i<-raster::raster(file.path(SPDIR,'ibcso_v1_bed_crop.tif')) #60?S
#depth_e<-raster::raster(file.path(SPDIR,'ETOPO1_DEM.tif')) #60?S
#depth_e<-crop(depth_e,boundary)
#raster::writeRaster(depth_i,file.path(SPDIR,'ibcso_v1_bed_crop.tif'),driver='GTiff') #60?S
b<-spTransform(boundary,crs(depth_i))
depth <- SpatialPixelsDataFrame(depth_i,data.frame(depth=depth_i@data@values))
depth_i
depth_i@data@values
values(depth_i)
depth <- SpatialPixelsDataFrame(depth_i,data.frame(depth=values(depth_i))
)
depth_i<-raster::raster(file.path(SPDIR,'ibcso_v1_bed_crop.tif'))
b<-spTransform(boundary,crs(depth_i))
depth <- SpatialPixelsDataFrame(depth_i,data.frame(depth=values(depth_i)))
raster::crs(depth)<-raster::crs(depth_i)
pos<-depth@coords[is.na(depth$depth),]
pos
LL<-sp::SpatialPoints(cbind(pos[,1],pos[,2]),crs(depth))
LL<-sp::spTransform(LL,crs(depth_e))
depth_e<-raster::raster(file.path(SPDIR,'ETOPO1_DEM.tif')) #60?S
depth_e<-crop(depth_e,boundary)
raster::writeRaster(depth_e,file.path(SPDIR,'ETOPO1_DEM_crop.tif'),driver='GTiff') #60?S
depth_i<-raster::raster(file.path(SPDIR,'ibcso_v1_bed_crop.tif'))
depth_e<-raster::raster(file.path(SPDIR,'ETOPO1_DEM_crop.tif')) #60?S
b<-spTransform(boundary,crs(depth_i))
depth <- SpatialPixelsDataFrame(depth_i,data.frame(depth=values(depth_i)))
raster::crs(depth)<-raster::crs(depth_i)
pos<-depth@coords[is.na(depth$depth),]
LL<-sp::SpatialPoints(cbind(pos[,1],pos[,2]),crs(depth))
LL<-sp::spTransform(LL,crs(depth_e))
depth$depth[is.na(depth$depth)]<-extract(depth_e,LL)
slope<-terrain(raster(depth),opt='slope')
aspect<-terrain(raster(depth),opt='aspect')
TPI<-terrain(raster(depth),opt='TPI')
TRI<-terrain(raster(depth),opt='TRI')
roughness<-terrain(raster(depth),opt='roughness')
slope <- SpatialPixelsDataFrame(slope,data.frame(slope=slope@data@values))
values(slope)
slope <- SpatialPixelsDataFrame(slope,data.frame(slope=slope@data@values))
aspect <- SpatialPixelsDataFrame(aspect,data.frame(aspect=aspect@data@values))
TPI <- SpatialPixelsDataFrame(TPI,data.frame(TPI=TPI@data@values))
TRI <- SpatialPixelsDataFrame(TRI,data.frame(TRI=TRI@data@values))
roughness <- SpatialPixelsDataFrame(roughness,data.frame(roughness=roughness@data@values))
slope<-terrain(raster(depth),opt='slope')
aspect<-terrain(raster(depth),opt='aspect')
TPI<-terrain(raster(depth),opt='TPI')
TRI<-terrain(raster(depth),opt='TRI')
roughness<-terrain(raster(depth),opt='roughness')
slope <- SpatialPixelsDataFrame(slope,data.frame(slope=slope@data@values))
aspect <- SpatialPixelsDataFrame(aspect,data.frame(aspect=aspect@data@values))
TPI <- SpatialPixelsDataFrame(TPI,data.frame(TPI=TPI@data@values))
TRI <- SpatialPixelsDataFrame(TRI,data.frame(TRI=TRI@data@values))
roughness <- SpatialPixelsDataFrame(roughness,data.frame(roughness=roughness@data@values))
raster::crs(aspect)<-raster::crs(TPI)<-raster::crs(slope)<-raster::crs(TRI)<-raster::crs(roughness)<-raster::crs(depth)
pts<-sp::spsample(depth,type='regular',cellsize=cellsize)
raster::crs(pts)<-raster::crs(depth)
rm(list=ls())
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #only works in RStudio!
SCRIPTDIR<-file.path(getwd(),'SCRIPT')
for (f in list.files(SCRIPTDIR,full.names = T)){ source(f)}
#### SPATIAL DATA #####
library(raster)
library(rgeos)
cellsize<-5000
boundary<-rgdal::readOGR(file.path(SPDIR,'Prediction_Boundary.gpkg'))
shelf<-rgdal::readOGR(file.path(SPDIR,'shelf_edge_Clip.gpkg'))
shelf_poly<-rgdal::readOGR(file.path(SPDIR,'shelf_edge_Clip_Polygon.gpkg'))
surveyarea<-rgdal::readOGR(file.path(SPDIR,'Survey_Area_Mask.gpkg'))
coastline<-rgdal::readOGR(file.path(SPDIR,'Antarctica_Clip.gpkg'))
depth_i<-raster::raster(file.path(SPDIR,'ibcso_v1_bed_crop.tif'))
depth_e<-raster::raster(file.path(SPDIR,'ETOPO1_DEM_crop.tif')) #60?S
b<-spTransform(boundary,crs(depth_i))
depth <- SpatialPixelsDataFrame(depth_i,data.frame(depth=values(depth_i)))
raster::crs(depth)<-raster::crs(depth_i)
pos<-depth@coords[is.na(depth$depth),]
LL<-sp::SpatialPoints(cbind(pos[,1],pos[,2]),crs(depth))
LL<-sp::spTransform(LL,crs(depth_e))
depth$depth[is.na(depth$depth)]<-extract(depth_e,LL)
slope<-terrain(raster(depth),opt='slope')
aspect<-terrain(raster(depth),opt='aspect')
TPI<-terrain(raster(depth),opt='TPI')
TRI<-terrain(raster(depth),opt='TRI')
roughness<-terrain(raster(depth),opt='roughness')
slope <- SpatialPixelsDataFrame(slope,data.frame(slope=slope@data@values))
aspect <- SpatialPixelsDataFrame(aspect,data.frame(aspect=aspect@data@values))
TPI <- SpatialPixelsDataFrame(TPI,data.frame(TPI=TPI@data@values))
TRI <- SpatialPixelsDataFrame(TRI,data.frame(TRI=TRI@data@values))
roughness <- SpatialPixelsDataFrame(roughness,data.frame(roughness=roughness@data@values))
raster::crs(aspect)<-raster::crs(TPI)<-raster::crs(slope)<-raster::crs(TRI)<-raster::crs(roughness)<-raster::crs(depth)
pts<-sp::spsample(depth,type='regular',cellsize=cellsize)
raster::crs(pts)<-raster::crs(depth)
##### calculation of distance to shelf edge & distance to coastline
ds<-c()
pb<-txtProgressBar(min=0,max=nrow(pts@coords),style=3)
